# f2py preparation

incdir_numpy = run_command(
    py,
    ['-c', 'import os; os.chdir(".."); import numpy; print(numpy.get_include())'],
    check: true
).stdout().strip()

incdir_f2py = run_command(
    py,
    ['-c', 'import os; os.chdir(".."); import numpy.f2py; print(numpy.f2py.get_include())'],
    check : true
).stdout().strip()

fortranobject = incdir_f2py / 'fortranobject.c'
inc_np = include_directories(incdir_numpy, incdir_f2py)


# Fortran extension modules

f90_basenames = [
    'compute_flux_dirinv',
    'compute_lwa_only_nhn22',
    'compute_qgpv_direct_inv',
    'compute_qgpv',
    'compute_qref_and_fawa_first',
    'compute_reference_states',
    'matrix_after_inversion',
    'matrix_b4_inversion',
    'upward_sweep'
]

foreach basename : f90_basenames

    name_f = files(basename + '.f90')
    # Intermediate files generated by f2py
    name_c = basename + 'module.c'
    name_w = basename + '-f2pywrappers.f'

    f90_source = custom_target(
        input: name_f,
        output: [name_c, name_w],
        command: [py, '-m', 'numpy.f2py', '@INPUT@', '-m', basename, '--build-dir', '@OUTDIR@', '--lower']
    )

    py.extension_module(
        basename,
        [name_f, f90_source, fortranobject],
        include_directories: [inc_np, inc_root],
        dependencies: py.dependency(),
        install: true,
        subdir: 'falwa'
    )

endforeach
